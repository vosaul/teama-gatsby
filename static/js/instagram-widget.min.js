// WebComponent: InstagramWidget 2.6.1 - Collection of WebComponents by Patryk Rzucidlo [@PTKDev] <support@ptkdev.io>
// https://github.com/ptkdev-components/webcomponent-instagram-widget
(function () { class InstagramWidget extends HTMLElement { constructor() { super(); const t = document.createElement("template"); t.innerHTML = '<style id="instagram-widget-style" part="style">#instagram-widget *{margin:0;padding:0;line-height:0}#instagram-widget .instagram-widget-container{text-align:center;justify-content:center;font-weight:500}#instagram-widget .instagram-widget-photos li img{border-radius:5%;background-color:#f8f8ff;object-fit:cover;object-position:50% 50%;max-width:300px;max-height:300px;min-width:80px;min-height:80px;margin:2px}#instagram-widget .instagram-content ul{list-style-type:none;padding-inline-start:0;width:100%}#instagram-widget .instagram-widget-photos li{list-style-type:none;display:inline}</style><div id="instagram-widget" part="main" version="2.6.1">\n\t<div class="instagram-widget-container" part="container">\n\t\t<div class="instagram-widget-content" part="content">\n\t\t\t<ul class="instagram-widget-photos" part="photos"></ul>\n\t\t</div>\n\t</div>\n</div>', this.attachShadow({ mode: "open" }), this.shadowRoot.appendChild(t.content.cloneNode(!0)), this.json = null, this.options_default = { username: "@ptkdev", "items-limit": "9", "image-width": "100%", "image-height": "100%", grid: "responsive", cache: "enabled", "border-spacing": "2px", "border-corners": "5", "force-square": "yes", shadows: "disabled", "mouse-hover": "disabled", "show-title": "enabled" }, this.options = Object.create(this.options_default), this.resizeAction = function (t) { this.resize(t) }.bind(this) } connectedCallback() { window.addEventListener("resize", this.resizeAction) } buildHTML() { let t = this.json.graphql.user.edge_owner_to_timeline_media.edges, e = []; for (let i = 0; i < t.length; i++)e.push({ url: `https://www.instagram.com/p/${t[i].node.shortcode}/`, thumbnail: t[i].node.thumbnail_src, display_url: void 0 !== t[i].node.display_url ? t[i].node.display_url : "", caption: t[i].node.edge_media_to_caption.edges[0] && void 0 !== t[i].node.edge_media_to_caption.edges[0].node.text ? t[i].node.edge_media_to_caption.edges[0].node.text : "" }); let i = ""; for (let t = 0; t < e.length && t < this.options["items-limit"]; t++)i += `<li class="instagram-widget-li" part="li li-${t}"><a href="${e[t].url}" rel="nofollow external noopener noreferrer" target="_blank" title="${"enabled" === this.options["show-title"] ? e[t].caption.substring(0, 100).replace(/"/g, "") : ""}" class="instagram-widget-link" part="link link-${t}"><img width="${this.options["image-width"]}" height="${this.options["image-height"]}" src="${e[t].display_url}" alt="${"enabled" === this.options["show-title"] ? e[t].caption.substring(0, 100).replace(/"/g, "") : ""}" loading="lazy" class="instagram-widget-photo" part="photo photo-${t}" /></a></li>`; switch (this.shadowRoot.querySelector(".instagram-widget-photos").innerHTML = i, this.options["mouse-hover"]) { case "type1": this.shadowRoot.querySelector("#instagram-widget-style").innerHTML = this.shadowRoot.querySelector("#instagram-widget-style").innerHTML + "\n\t\t\t\t#instagram-widget .instagram-widget-photo{transition: opacity 0.3s ease-in-out;}\n\t\t\t\t#instagram-widget .instagram-widget-photo:hover{opacity: 0.70;}" }if ("" !== this.options.grid && null !== this.options.grid && "responsive" !== this.options.grid) { let t = this.options.grid.split("x"), e = 100 / parseInt(t[0]), i = this.shadowRoot.querySelectorAll(".instagram-widget-photos img"); for (let s = 0; s < i.length; s++) { switch (i[s].removeAttribute("width"), i[s].style.width = `calc(${e}% - (${this.options["border-spacing"]} * (${parseInt(t[0])} * 2)))`, i[s].style.maxWidth = "none", i[s].style.maxHeight = "none", i[s].style.borderRadius = this.options["border-corners"] + "%", i[s].style.margin = this.options["border-spacing"], this.options.shadows) { case "type1": i[s].style.boxShadow = "0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)"; break; case "type2": i[s].style.boxShadow = "0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)"; break; case "type3": i[s].style.boxShadow = "0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22)" }"yes" === this.options["force-square"] && (i[s].removeAttribute("height"), i[s].style.height = this.shadowRoot.querySelector(".instagram-widget-photos img").clientWidth + "px") } } else { let t = this.shadowRoot.querySelectorAll(".instagram-widget-photos img"); for (let e = 0; e < t.length; e++) { switch (t[e].style.borderRadius = this.options["border-corners"] + "%", t[e].style.margin = this.options["border-spacing"], this.options.shadows) { case "type1": t[e].style.boxShadow = "0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)"; break; case "type2": t[e].style.boxShadow = "0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)"; break; case "type3": t[e].style.boxShadow = "0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22)" }"yes" === this.options["force-square"] && (t[e].removeAttribute("height"), t[e].style.maxHeight = "none", t[e].style.height = this.shadowRoot.querySelector(".instagram-widget-photos img").clientWidth + "px") } } } resize() { let t = this.shadowRoot.querySelectorAll(".instagram-widget-photos img"); for (let e = 0; e < t.length; e++)"yes" === this.options["force-square"] && (t[e].style.height = this.shadowRoot.querySelector(".instagram-widget-photos img").clientWidth + "px") } apiFetch() { let t = `https://www.instagram.com/${this.options.username.replace("@", "")}/?__a=1`; fetch(t, { cache: null === this.options.cache || "enabled" === this.options.cache ? "force-cache" : "default" }).then((function (t) { if (200 === t.status) return t.json() })).then(function (t) { this.json = t, this.buildHTML() }.bind(this)) } static get observedAttributes() { return ["username", "items-limit", "grid", "image-width", "image-height", "border-spacing", "border-corners", "force-square", "mouse-hover", "shadows", "show-title", "cache"] } attributeChangedCallback(t, e, i) { if (e !== i) switch (this.options[t] = null === i || "" === i ? this.options_default[t] : i, t) { case "username": this.apiFetch(); break; default: null !== this.json && this.buildHTML() } } disconnectedCallback() { window.removeEventListener("resize", this.resizeAction) } } window.customElements.define("instagram-widget", InstagramWidget); })();